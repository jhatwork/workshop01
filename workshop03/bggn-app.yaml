# Create deployment with application pods
---
apiVersion: apps/v1 
kind: Deployment 
metadata:
  name: bggappv1-deploy
  namespace: bggns
  labels:
    name: bggappv1-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      name: bggappv1-po
  template: 
    metadata:
      name: bggappv1-po
      namespace: bggns
      labels:
        name: bggappv1-po
    spec:
      containers:
      - name: bggappv1
        image: stackupiss/bgg-backend:v1
        args:
        - --prefix
        - /v1
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: dbconn-cfgmap
        - secretRef:
            name: dbpwd-secret
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /v1/healthz
            port: 3000
        readinessProbe:
          httpGet:
            path: /v1/healthz
            port: 3000
---
apiVersion: apps/v1 
kind: Deployment 
metadata:
  name: bggappv2-deploy
  namespace: bggns
  labels:
    name: bggappv2-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      name: bggappv2-po
  template: 
    metadata:
      name: bggappv2-po
      namespace: bggns
      labels:
        name: bggappv2-po
    spec:
      containers:
      - name: bggappv2
        image: stackupiss/bgg-backend:v2
        args:
        - --prefix
        - /v2
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: dbconn-cfgmap
        - secretRef:
            name: dbpwd-secret
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /v2/healthz
            port: 3000
        readinessProbe:
          httpGet:
            path: /v2/healthz
            port: 3000
# Create service for apps
---
apiVersion: v1
kind: Service
metadata: 
  name: bggappv1-svc
  namespace: bggns
  labels:
    name: bggappv1-svc
spec:
  type: ClusterIP
  selector:
    name: bggappv1-po
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata: 
  name: bggappv2-svc
  namespace: bggns
  labels:
    name: bggappv2-svc
spec:
  type: ClusterIP
  selector:
    name: bggappv2-po
  ports:
    - port: 3000
      targetPort: 3000
# Create Ingress rules
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bgg-ing
  namespace: bggns
  labels:
    name: bgg-ing
spec: 
  ingressClassName: nginx
  rules:
  - host: bgg-139.59.192.44.nip.io
    http:
      paths:
      - path: /v1
        pathType: Prefix
        backend:
          service:
            name: bggappv1-svc
            port:
              number: 3000
      - path: /v2
        pathType: Prefix
        backend:
          service:
            name: bggappv2-svc
            port:
              number: 3000